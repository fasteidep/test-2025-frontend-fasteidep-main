document.addEventListener('DOMContentLoaded', () => {
    const testList = document.querySelector('[test-id="list-items"]');
    const addTestButton = document.querySelector('[test-id="list-add-button"]');
    const modal = document.querySelector('[test-id="form-modal"]');
    const errorLabel = document.querySelector('.Error-form');

    let predefinedTests = []; // –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã
    let userTests = JSON.parse(localStorage.getItem('tests')) || []; // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ç–µ—Å—Ç—ã

    // –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤ –∏–∑ data.json
    fetch('data.json')
        .then(response => {
            if (!response.ok) {
                throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö');
            }
            return response.json();
        })
        .then(data => {
            predefinedTests = data;
            renderTestList([...predefinedTests, ...userTests]); // –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ç–µ—Å—Ç—ã
        })
        .catch(error => {
            testList.innerHTML = '<p>–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ—Å—Ç—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.</p>';
        });

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å–ø–∏—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤
    function renderTestList(tests) {
        testList.innerHTML = ''; // –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º
        if (tests.length === 0) {
            testList.innerHTML = '<p>–¢–µ—Å—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.</p>';
            return;
        }

        tests.forEach((test) => {
            const testItem = document.createElement('div');
            testItem.className = 'test-item';
            testItem.innerHTML = `
                <span test-id="list-item-title">${test.title}</span>
                <button test-id="list-item-delete" class="delete-button">üóë</button>
            `;
            testList.appendChild(testItem);

            // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–µ—Å—Ç–∞
            testItem.querySelector('span').addEventListener('click', () => {
                window.location.href = `index.html?testId=${test.id}`; // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ index.html —Å testId
            });

            // –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞
            const deleteButton = testItem.querySelector('button');
            const isPredefined = predefinedTests.some(predefinedTest => predefinedTest.id === test.id);
            if (isPredefined) {
                deleteButton.disabled = true; // –ó–∞–ø—Ä–µ—â–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
            } else {
                deleteButton.addEventListener('click', (e) => {
                    e.stopPropagation(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ —Å–æ–±—ã—Ç–∏—è
                    userTests = userTests.filter(userTest => userTest.id !== test.id); // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç –∏–∑ –º–∞—Å—Å–∏–≤–∞
                    localStorage.setItem('tests', JSON.stringify(userTests)); // –û–±–Ω–æ–≤–ª—è–µ–º localStorage
                    renderTestList([...predefinedTests, ...userTests]); // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫
                });
            }
        });
    }

    // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–∞
    addTestButton.addEventListener('click', () => {
        modal.style.display = 'block';
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
    modal.addEventListener('click', (e) => {
        if (e.target === modal) {
            modal.style.display = 'none';
        }
    });
});